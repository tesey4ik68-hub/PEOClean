// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PEOcleanWPFApp.Data;

#nullable disable

namespace PEOcleanWPFApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("PEOcleanWPFApp.Models.AttendanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasPhoto")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReplacementEmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ReplacementEmployeeId");

                    b.ToTable("AttendanceRecords");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.AttendanceRecordServiceAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttendanceRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServiceAddressId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceRecordId");

                    b.HasIndex("ServiceAddressId");

                    b.ToTable("AttendanceRecordServiceAddresses");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCleaner")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsJanitor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.EmployeeServiceAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiceAddressId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ServiceAddressId");

                    b.ToTable("EmployeeServiceAddresses");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.HouseWorkSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServiceAddressId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServiceAddressId");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("HouseWorkSchedules");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.ServiceAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Apartments")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuildingType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CleanerRate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ConstructionYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Entrances")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Floors")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GarbageChuteType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HouseArea")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("JanitorRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("YardArea")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ServiceAddresses");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.WorkReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AttendanceRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiceAddressId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceRecordId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ServiceAddressId");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("WorkReports");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.WorkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("RequiresPhoto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitOfMeasure")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("WorkTypes");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.AttendanceRecord", b =>
                {
                    b.HasOne("PEOcleanWPFApp.Models.Employee", "Employee")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PEOcleanWPFApp.Models.Employee", "ReplacementEmployee")
                        .WithMany()
                        .HasForeignKey("ReplacementEmployeeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Employee");

                    b.Navigation("ReplacementEmployee");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.AttendanceRecordServiceAddress", b =>
                {
                    b.HasOne("PEOcleanWPFApp.Models.AttendanceRecord", "AttendanceRecord")
                        .WithMany("AttendanceRecordServiceAddresses")
                        .HasForeignKey("AttendanceRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PEOcleanWPFApp.Models.ServiceAddress", "ServiceAddress")
                        .WithMany("AttendanceRecordServiceAddresses")
                        .HasForeignKey("ServiceAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceRecord");

                    b.Navigation("ServiceAddress");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.EmployeeServiceAddress", b =>
                {
                    b.HasOne("PEOcleanWPFApp.Models.Employee", "Employee")
                        .WithMany("EmployeeServiceAddresses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PEOcleanWPFApp.Models.ServiceAddress", "ServiceAddress")
                        .WithMany("EmployeeServiceAddresses")
                        .HasForeignKey("ServiceAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ServiceAddress");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.HouseWorkSchedule", b =>
                {
                    b.HasOne("PEOcleanWPFApp.Models.ServiceAddress", "ServiceAddress")
                        .WithMany("HouseWorkSchedules")
                        .HasForeignKey("ServiceAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PEOcleanWPFApp.Models.WorkType", "WorkType")
                        .WithMany("HouseWorkSchedules")
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceAddress");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.Payment", b =>
                {
                    b.HasOne("PEOcleanWPFApp.Models.Employee", "Employee")
                        .WithMany("Payments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.WorkReport", b =>
                {
                    b.HasOne("PEOcleanWPFApp.Models.AttendanceRecord", "AttendanceRecord")
                        .WithMany()
                        .HasForeignKey("AttendanceRecordId");

                    b.HasOne("PEOcleanWPFApp.Models.Employee", "Employee")
                        .WithMany("WorkReports")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PEOcleanWPFApp.Models.ServiceAddress", "ServiceAddress")
                        .WithMany("WorkReports")
                        .HasForeignKey("ServiceAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PEOcleanWPFApp.Models.WorkType", "WorkType")
                        .WithMany("WorkReports")
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceRecord");

                    b.Navigation("Employee");

                    b.Navigation("ServiceAddress");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.AttendanceRecord", b =>
                {
                    b.Navigation("AttendanceRecordServiceAddresses");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.Employee", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("EmployeeServiceAddresses");

                    b.Navigation("Payments");

                    b.Navigation("WorkReports");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.ServiceAddress", b =>
                {
                    b.Navigation("AttendanceRecordServiceAddresses");

                    b.Navigation("EmployeeServiceAddresses");

                    b.Navigation("HouseWorkSchedules");

                    b.Navigation("WorkReports");
                });

            modelBuilder.Entity("PEOcleanWPFApp.Models.WorkType", b =>
                {
                    b.Navigation("HouseWorkSchedules");

                    b.Navigation("WorkReports");
                });
#pragma warning restore 612, 618
        }
    }
}
